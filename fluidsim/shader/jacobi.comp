#version 430 core

layout(local_size_x=1, local_size_y=1, local_size_z=1) in;

layout(rgba16_snorm) 
uniform image3D fieldx_r;

layout(rgba16_snorm) 
uniform image3D fieldb_r;

layout(rgba16_snorm) 
uniform image3D field_out;

uniform float alpha;
uniform float beta;

ivec3 clamp_coord(ivec3 coord, ivec3 size)
{
    return clamp(coord, ivec3(0, 0, 0), size);
}

void main()
{
    ivec3 coord = ivec3(gl_GlobalInvocationID);

    ivec3 gridSize = imageSize(fieldx_r) - ivec3(1,1,1);

    vec4 left = imageLoad(fieldx_r, clamp_coord(coord + ivec3(-1,0,0), gridSize));
    vec4 right = imageLoad(fieldx_r, clamp_coord(coord + ivec3(1,0,0), gridSize));
    vec4 top = imageLoad(fieldx_r, clamp_coord(coord + ivec3(0,1,0), gridSize));
    vec4 bottom = imageLoad(fieldx_r, clamp_coord(coord + ivec3(0,-1,0), gridSize));
    vec4 up = imageLoad(fieldx_r, clamp_coord(coord + ivec3(0,0,-1), gridSize));
    vec4 down = imageLoad(fieldx_r, clamp_coord(coord + ivec3(0,0,1), gridSize));

    vec4 center = imageLoad(fieldb_r, coord);

    //vec4 result = (left + right + top + bottom + up + down - center) / 6.0;

    vec4 result = (left + right + top + bottom + up + down + (alpha * center)) * beta;

    imageStore(field_out, coord, result);
}