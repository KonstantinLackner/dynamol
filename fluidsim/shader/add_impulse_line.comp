#version 430

layout(local_size_x=1, local_size_y=1, local_size_z=1) in;

layout(rgba16_snorm) 
uniform image3D field_r;

layout(rgba16_snorm) 
uniform image3D field_w;

uniform float radius;

uniform vec3 start;
uniform vec3 end;
uniform vec3 cameraPosition;
uniform float forceMultiplier;

// https://math.stackexchange.com/a/1905794
void magnitude_point_line(in vec3 point, out float magnitude, out vec3 projectedPoint)
{
    vec3 d = normalize(end - start);
    vec3 v = point - start;
    float t = dot(v, d);

    projectedPoint = start + t * d;

    vec3 proj = projectedPoint - point;
    magnitude = dot(proj, proj);
}

void impulse_line(ivec3 coord)
{
    vec3 lineDirection = end - start;

    float x;
    vec3 projectedPoint;
    magnitude_point_line(vec3(coord), x, projectedPoint);

    x = -x / radius;

    vec4 effect = vec4(forceMultiplier * vec3(1.0) * exp(x), 1.0);

    vec4 u0 = imageLoad(field_r, coord);
    vec4 summed = u0 + effect;
    imageStore(field_w, coord, summed);
}

void main()
{
    ivec3 coord = ivec3(gl_GlobalInvocationID);
    impulse_point(coord);
}